   1               		.file	"avrmain.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 102               		.section	.text.startup,"ax",@progbits
 104               	.global	main
 106               	main:
 107               		.stabd	46,0,0
   1:avrmain.c     **** #include <avr/io.h>
   2:avrmain.c     **** #include <avr/interrupt.h>
   3:avrmain.c     **** 
   4:avrmain.c     **** int main(void)
   5:avrmain.c     **** {
 109               	.LM0:
 110               	.LFBB1:
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
   6:avrmain.c     **** 
   7:avrmain.c     ****   //Setup the clock
   8:avrmain.c     ****   cli();			//Disable global interrupts
 116               	.LM1:
 117               	/* #APP */
 118               	 ;  8 "avrmain.c" 1
 119 0000 F894      		cli
 120               	 ;  0 "" 2
   9:avrmain.c     ****   TCCR1B |= 1<<CS11 | 1<<CS10;	//Divide by 64
 122               	.LM2:
 123               	/* #NOAPP */
 124 0002 8EB5      		in r24,0x2e
 125 0004 8360      		ori r24,lo8(3)
 126 0006 8EBD      		out 0x2e,r24
  10:avrmain.c     ****   OCR1A = 15624;		//Count 15624 cycles for 1 second interrupt
 128               	.LM3:
 129 0008 88E0      		ldi r24,lo8(8)
 130 000a 9DE3      		ldi r25,lo8(61)
 131 000c 9BBD      		out 0x2a+1,r25
 132 000e 8ABD      		out 0x2a,r24
  11:avrmain.c     ****   TCCR1B |= 1<<WGM12;		//Put Timer/Counter1 in CTC mode
 134               	.LM4:
 135 0010 8EB5      		in r24,0x2e
 136 0012 8860      		ori r24,lo8(8)
 137 0014 8EBD      		out 0x2e,r24
  12:avrmain.c     ****   TIMSK |= 1<<OCIE1A;		//enable timer compare interrupt
 139               	.LM5:
 140 0016 89B7      		in r24,0x39
 141 0018 8061      		ori r24,lo8(16)
 142 001a 89BF      		out 0x39,r24
  13:avrmain.c     ****   sei();			//Enable global interrupts
 144               	.LM6:
 145               	/* #APP */
 146               	 ;  13 "avrmain.c" 1
 147 001c 7894      		sei
 148               	 ;  0 "" 2
  14:avrmain.c     **** 
  15:avrmain.c     ****   //Setup the I/O for the LED
  16:avrmain.c     **** 
  17:avrmain.c     ****   DDRD |= (1<<0);		//Set PortD Pin0 as an output
 150               	.LM7:
 151               	/* #NOAPP */
 152 001e 889A      		sbi 0x11,0
  18:avrmain.c     ****   PORTD |= (1<<0);		//Set PortD Pin0 high to turn on LED
 154               	.LM8:
 155 0020 909A      		sbi 0x12,0
 156               	.L2:
 157 0022 00C0      		rjmp .L2
 159               	.Lscope1:
 161               		.stabd	78,0,0
 162               		.text
 164               	.global	__vector_6
 166               	__vector_6:
 167               		.stabd	46,0,0
  19:avrmain.c     **** 
  20:avrmain.c     ****   while(1) { }			//Loop forever, interrupts do the rest
  21:avrmain.c     **** }
  22:avrmain.c     **** 
  23:avrmain.c     **** ISR(TIMER1_COMPA_vect)		//Interrupt Service Routine
  24:avrmain.c     **** {
 169               	.LM9:
 170               	.LFBB2:
 171 0000 1F92      		push r1
 172 0002 0F92      		push r0
 173 0004 0FB6      		in r0,__SREG__
 174 0006 0F92      		push r0
 175 0008 1124      		clr __zero_reg__
 176 000a 8F93      		push r24
 177 000c 9F93      		push r25
 178               	/* prologue: Signal */
 179               	/* frame size = 0 */
 180               	/* stack size = 5 */
 181               	.L__stack_usage = 5
  25:avrmain.c     ****   PORTD ^= (1<<0);		//Use xor to toggle the LED
 183               	.LM10:
 184 000e 82B3      		in r24,0x12
 185 0010 91E0      		ldi r25,lo8(1)
 186 0012 8927      		eor r24,r25
 187 0014 82BB      		out 0x12,r24
 188               	/* epilogue start */
  26:avrmain.c     **** }
 190               	.LM11:
 191 0016 9F91      		pop r25
 192 0018 8F91      		pop r24
 193 001a 0F90      		pop r0
 194 001c 0FBE      		out __SREG__,r0
 195 001e 0F90      		pop r0
 196 0020 1F90      		pop r1
 197 0022 1895      		reti
 199               	.Lscope2:
 201               		.stabd	78,0,0
 203               	.Letext0:
 204               		.ident	"GCC: (GNU) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 avrmain.c
     /tmp/ccnklNRD.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccnklNRD.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccnklNRD.s:4      *ABS*:0000003f __SREG__
     /tmp/ccnklNRD.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccnklNRD.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccnklNRD.s:106    .text.startup:00000000 main
     /tmp/ccnklNRD.s:166    .text:00000000 __vector_6

NO UNDEFINED SYMBOLS
